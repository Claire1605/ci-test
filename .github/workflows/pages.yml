name: pages

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]

# Allow one concurrent pages deploy/cleanup
concurrency:
  group: "pages"
  cancel-in-progress: false

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write         # to deploy to Pages
  id-token: write      # to verify the deployment originates from an appropriate source
  pull-requests: write # to leave a comment

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}${{ github.head_ref }}

    steps:
      - uses: actions/checkout@v3

      - name: build
        run: |
          mkdir build
          mkdir build/${{ github.head_ref }}
          echo "test build" > build/${{ github.head_ref }}/index.html
          echo ${{ github.head_ref }} >> build/${{ github.head_ref }}/index.html
          echo ${{ github.sha }} >> build/${{ github.head_ref }}/index.html

      - name: download old build
        uses: dawidd6/action-download-artifact@v2
        with:
          name: github-pages
          workflow: pages.yml
          path: pages
        continue-on-error: true # ignored since artifact may not exist
      - name: extract old build
        working-directory: pages
        run: |
          tar xf artifact.tar
          rm artifact.tar
        continue-on-error: true # ignored since artifact may not exist

      - name: merge new build into old build
        run: rsync -a build/ pages/

      - name: recreate index
        working-directory: pages
        run: |
          ls -d */ | cut -f1 -d'/' > index.html
          sed -i 's/^\(.*\)$/<a href=".\/\1">\1<\/a><br\/>/g' index.html
          cat index.html

      - name: upload
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./pages/
          retention-days: 1
      - name: deploy
        id: deployment
        uses: actions/deploy-pages@v1
        with:
          token: ${{ secrets.DEPLOY_TOKEN }}

  cleanup:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}${{ github.head_ref }}

    steps:
      - uses: actions/checkout@v3

      - name: download old build
        uses: dawidd6/action-download-artifact@v2
        with:
          name: github-pages
          workflow: pages.yml
          path: pages
        continue-on-error: true # ignored since artifact may not exist
      - name: extract old build
        working-directory: pages
        run: |
          tar xf artifact.tar
          rm artifact.tar
        continue-on-error: true # ignored since artifact may not exist

      - name: delete branch
        run: rm -rf pages/${{ github.head_ref }}

      - name: recreate index
        working-directory: pages
        run: |
          ls -d */ | cut -f1 -d'/' > index.html
          sed -i 's/^\(.*\)$/<a href=".\/\1">\1<\/a><br\/>/g' index.html
          cat index.html

      - name: upload
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./pages/
          retention-days: 1
      - name: deploy
        id: deployment
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: pages
          token: ${{ secrets.DEPLOY_TOKEN }}
